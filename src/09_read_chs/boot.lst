     1                                  %include    "../include/define.s"
     2                              <1> BOOT_LOAD   equ     0x7C00
     3                              <1> BOOT_SIZE   equ     (1024 * 8)
     4                              <1> SECT_SIZE   equ     (512)
     5                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE)
     2                                  %include    "../include/macro.s"
     3                              <1> %macro  cdecl 1-*.nolist
     4                              <1> 
     5                              <1>     %rep %0 - 1
     6                              <1>         push    %{-1:-1}
     7                              <1>         %rotate -1
     8                              <1>     %endrep
     9                              <1>     %rotate -1
    10                              <1>     call    %1
    11                              <1> 
    12                              <1>     %if 1 < %0
    13                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1>     %endif
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 ????                <1>     .no     resw    1
    19 00000002 ????                <1>     .cyln   resw    1
    20 00000004 ????                <1>     .head   resw    1
    21 00000006 ????                <1>     .sect   resw    1
    22                              <1> endstruc
     3                                  
     4                                      ORG         BOOT_LOAD
     5                                  
     6                                  entry:
     7 00000000 EB58                        jmp     ipl
     8                                  
     9 00000002 90<rep 58h>                 times   90 - ($ - $$) db 0x90
    10                                  
    11                                  ipl:
    12 0000005A FA                          cli
    13 0000005B B80000                      mov     ax, 0x0000
    14 0000005E 8ED8                        mov     ds, ax
    15 00000060 8EC0                        mov     es, ax
    16 00000062 8ED0                        mov     ss, ax
    17 00000064 BC007C                      mov     sp, BOOT_LOAD
    18 00000067 FB                          sti
    19 00000068 8816[C600]                  mov     [BOOT + drive.no], dl
    20                                  
    21 0000006C 68[9B00]E85E0083C4-         cdecl   puts, .s0
    21 00000074 02                 
    22                                  
    23 00000075 BB0F00                      mov     bx, BOOT_SECT - 1
    24 00000078 B9007E                      mov     cx, BOOT_LOAD + SECT_SIZE
    25                                  
    26 0000007B 515368[C600]E8AB00-         cdecl   read_chs, BOOT, bx, cx
    26 00000083 83C406             
    27                                  
    28 00000086 39D8                        cmp     ax, bx
    29                                  .10Q:
    30 00000088 740C                        jz     .10E
    31                                  .10T:
    32 0000008A 68[B300]E8400083C4-         cdecl   puts, .e0
    32 00000092 02                 
    33 00000093 E85900                      call    reboot
    34                                  .10E:
    35 00000096 E96701                      jmp     stage_2
    36                                      
    37 00000099 EBFE                        jmp     $
    38                                  
    39 0000009B 426F6F74696E672E2E-     .s0 db  "Booting...", 0x0A, 0x0D, 0
    39 000000A4 2E0A0D00           
    40 000000A8 2D2D2D2D2D2D2D2D0A-     .s1 db  "--------", 0x0A, 0x0D, 0
    40 000000B1 0D00               
    41 000000B3 4572726F723A736563-     .e0 db  "Error:sector read", 0
    41 000000BC 746F72207265616400 
    42                                  
    43 000000C5 00                      ALIGN 2, db 0
    44                                  BOOT:
    45                                      istruc  drive
    46 000000C6 0000                            at  drive.no,   dw  0
    47 000000C8 0000                            at  drive.cyln, dw  0
    48 000000CA 0000                            at  drive.head, dw  0
    49 000000CC 0200                            at  drive.sect, dw  2
    50                                      iend
    51 000000CE 0000                    .DRIVE:     dw  0
    52                                  
    53                                  %include    "../modules/real/puts.s"
    54                              <1> puts:
    55 000000D0 55                  <1>     push    bp
    56 000000D1 89E5                <1>     mov     bp, sp
    57 000000D3 50                  <1>     push    ax
    58 000000D4 53                  <1>     push    bx
    59 000000D5 56                  <1>     push    si
    60                              <1> 
    61 000000D6 8B7604              <1>     mov     si, [bp + 4]
    62                              <1> 
    63 000000D9 B40E                <1>     mov     ah, 0x0E
    64 000000DB BB0000              <1>     mov     bx, 0x0000
    65 000000DE FC                  <1>     cld
    66                              <1> 
    67                              <1> .10L:
    68 000000DF AC                  <1>     lodsb
    69 000000E0 3C00                <1>     cmp     al, 0
    70 000000E2 7404                <1>     je      .10E
    71                              <1> 
    72 000000E4 CD10                <1>     int     0x10
    73 000000E6 EBF7                <1>     jmp     .10L
    74                              <1> 
    75                              <1> .10E:
    76 000000E8 5E                  <1>     pop     si
    77 000000E9 5B                  <1>     pop     bx
    78 000000EA 58                  <1>     pop     ax
    79                              <1> 
    80 000000EB 89EC                <1>     mov     sp, bp
    81 000000ED 5D                  <1>     pop     bp
    82                              <1> 
    83 000000EE C3                  <1>     ret
    54                                  %include    "../modules/real/reboot.s"
    55                              <1> reboot:
    56 000000EF 68[0B01]E8DBFF83C4- <1>     cdecl   puts, .s0
    56 000000F7 02                  <1>
    57                              <1> 
    58                              <1> .10L:
    59 000000F8 B410                <1>     mov     ah, 0x10
    60 000000FA CD16                <1>     int     0x16
    61                              <1> 
    62 000000FC 3C20                <1>     cmp     al, ' '
    63 000000FE 75F8                <1>     jne     .10L
    64                              <1> 
    65 00000100 68[2901]E8CAFF83C4- <1>     cdecl   puts, .s1
    65 00000108 02                  <1>
    66                              <1> 
    67 00000109 CD19                <1>     int     0x19
    68                              <1> 
    69 0000010B 0A0D50757368205370- <1> .s0     db  0x0A, 0x0D, "Push Space key to reboot...", 0
    69 00000114 616365206B65792074- <1>
    69 0000011D 6F207265626F6F742E- <1>
    69 00000126 2E2E00              <1>
    70 00000129 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    55                                  %include    "../modules/real/read_chs.s"
    56                              <1> read_chs:
    57 0000012E 55                  <1>     push    bp
    58 0000012F 89E5                <1>     mov     bp, sp
    59 00000131 6A03                <1>     push    3
    60 00000133 6A00                <1>     push    0
    61                              <1> 
    62 00000135 53                  <1>     push    bx
    63 00000136 51                  <1>     push    cx
    64 00000137 52                  <1>     push    dx
    65 00000138 06                  <1>     push    es
    66 00000139 56                  <1>     push    si
    67                              <1> 
    68 0000013A 8B7604              <1>     mov     si, [bp + 4]
    69                              <1> 
    70 0000013D 8A6C02              <1>     mov     ch, [si + drive.cyln + 0]
    71 00000140 8A4C03              <1>     mov     cl, [si + drive.cyln + 1]
    72 00000143 C0E106              <1>     shl     cl, 6
    73 00000146 0A4C06              <1>     or      cl, [si + drive.sect]
    74                              <1> 
    75 00000149 8A7404              <1>     mov     dh, [si + drive.head]
    76 0000014C 8A14                <1>     mov     dl, [si + 0]
    77 0000014E B80000              <1>     mov     ax, 0x0000
    78 00000151 8EC0                <1>     mov     es, ax
    79 00000153 8B5E08              <1>     mov     bx, [bp + 8]
    80                              <1> 
    81                              <1> .10L:
    82 00000156 B402                <1>     mov     ah, 0x02
    83 00000158 8A4606              <1>     mov     al, [bp + 6]
    84                              <1> 
    85 0000015B CD13                <1>     int     0x13
    86 0000015D 7304                <1>     jnc     .11E
    87                              <1> 
    88 0000015F B000                <1>     mov     al, 0
    89 00000161 EB0C                <1>     jmp     .10E
    90                              <1> .11E:
    91 00000163 3C00                <1>     cmp     al, 0
    92 00000165 7508                <1>     jne     .10E
    93                              <1> 
    94 00000167 B80000              <1>     mov     ax, 0
    95 0000016A FF4EFE              <1>     dec     word [bp - 2]
    96 0000016D 75E7                <1>     jnz     .10L
    97                              <1> 
    98                              <1> .10E:
    99 0000016F B400                <1>     mov     ah, 0
   100                              <1> 
   101 00000171 5E                  <1>     pop     si
   102 00000172 07                  <1>     pop     es
   103 00000173 5A                  <1>     pop     dx
   104 00000174 59                  <1>     pop     cx
   105 00000175 5B                  <1>     pop     bx
   106                              <1> 
   107 00000176 89EC                <1>     mov     sp, bp
   108 00000178 5D                  <1>     pop     bp
   109 00000179 C3                  <1>     ret
    56                                  
    57 0000017A 00<rep 84h>                 times   510 - ($ - $$) db 0x00
    58 000001FE 55AA                        db      0x55, 0xAA
    59                                  
    60                                  stage_2:
    61 00000200 68[0B02]E8CAFE83C4-         cdecl   puts, .s0
    61 00000208 02                 
    62 00000209 EBFE                        jmp     $
    63                                  
    64 0000020B 326E64207374616765-     .s0 db  "2nd stage...", 0x0A, 0x0D, 0
    64 00000214 2E2E2E0A0D00       
    65                                  
    66 0000021A 00<rep 1DE6h>               times BOOT_SIZE - ($ - $$)   db  0
